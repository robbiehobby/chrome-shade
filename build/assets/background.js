import{d as c}from"./chrome.js";async function o(t,e=null){if(e!=="reset"&&t.website.hostname==="*")return;const a=await chrome.tabs.query({url:`*://${t.website.hostname}/*`});a&&await Promise.all(a.map(async r=>{try{if(!r.id)return;await chrome.tabs.sendMessage(r.id,{action:"update",payload:{settings:t,type:e}})}catch{}}))}async function i(t){let e;t?e=await chrome.tabs.get(t):e=(await chrome.tabs.query({currentWindow:!0,active:!0})).pop();const a=structuredClone(c),r=await chrome.storage.local.get(["_global"]);if(r._global&&(a.global=r._global),!(e!=null&&e.id)||!e.url)return a;try{await chrome.scripting.executeScript({target:{tabId:e.id},func:()=>!0})}catch{return a}const{hostname:s}=new URL(e.url);a.website.hostname=s;const n=await chrome.storage.local.get([s]);return n[s]&&(a.website=n[s]),a}async function l(t){if((t.website.hostname==="*"||t.website.mode==="global")&&await chrome.storage.local.set({_global:t.global}),t.website.hostname==="*")return;const e=await i();await chrome.storage.local.set({[e.website.hostname]:t.website}),await o(t)}chrome.runtime.onMessage.addListener((t,e,a)=>{if(e.id===chrome.runtime.id)switch(t.type){case"getSettings":return i().then(r=>a(r)),!0;case"saveSettings":l(t.payload);break;case"resetSettings":chrome.storage.local.clear().then(()=>o(c,"reset"));break}});chrome.commands.onCommand.addListener(async t=>{if(t!=="activate")return;const e=await i();e&&(e.website.on=!e.website.on,await l(e))});chrome.tabs.onUpdated.addListener(async(t,e)=>{e.status==="complete"&&await o(await i(t))});chrome.tabs.onActivated.addListener(async t=>{t.tabId&&await o(await i(t.tabId),"activated")});
